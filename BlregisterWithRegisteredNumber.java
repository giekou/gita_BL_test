package io.testproject.generated.tests.blregister;

import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import java.lang.Exception;
import java.lang.Override;
import java.lang.String;
import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;

/**
 * This class was automatically generated by TestProject
 * Project: My first Project
 * Test: BL_register with registered number
 * Generated by: Gita Dihardjo (giekou28@gmail.com)
 * Generated on Thu Feb 10 12:26:59 GMT 2022.
 */
@DisplayName("BL_register with registered number")
public class BlregisterWithRegisteredNumber implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("91FlgMwuiX83RWgtTivU23_ucdSWW7OrKD7SeRPV-7c", new ChromeOptions(), "Gita Dihardjo");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("BL_register with registered number")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;

    // 1. Navigate to '{{ApplicationURL}}'
    //    Navigates the specified URL (Auto-generated)
    GeneratedUtils.sleep(500);
    driver.navigate().to(ApplicationURL);

    // 2. Is 'Daftar' present?
    GeneratedUtils.sleep(500);
    by = By.xpath("//p[. = 'Daftar']");
    driver.findElement(by);

    // 3. Click 'Daftar'
    GeneratedUtils.sleep(500);
    by = By.xpath("//p[. = 'Daftar']");
    driver.findElement(by).click();

    // 4. Is 'Daftar dulu, yuk' present?
    GeneratedUtils.sleep(500);
    by = By.xpath("//p[. = 'Daftar dulu, yuk']");
    driver.findElement(by);

    // 5. Click 'INPUT'
    GeneratedUtils.sleep(500);
    by = By.xpath("//input");
    driver.findElement(by).click();

    // 6. Type '08998269895' in 'INPUT'
    GeneratedUtils.sleep(500);
    by = By.xpath("//input");
    driver.findElement(by).sendKeys("08998269895");

    // 7. Click 'Daftar1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = ' Daftar ']");
    driver.findElement(by).click();

    // 8. Is 'Verifikasi Pendaftaran' present?
    GeneratedUtils.sleep(500);
    by = By.xpath("//p[. = '\n                Verifikasi Pendaftaran\n              ']");
    driver.findElement(by);

    // 9. Is 'Kode Rahasia akan dikirimkan ke 0899-...' present?
    GeneratedUtils.sleep(500);
    by = By.xpath("//p[. = 'Kode Rahasia akan dikirimkan ke\n0899-8269-895 untuk proses verifikasi.']");
    driver.findElement(by);

    // 10. Click 'Ya, kirim kode'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = ' Ya, kirim kode ']");
    driver.findElement(by).click();

    // 11. Is 'Akun sudah terdaftar' present?
    GeneratedUtils.sleep(500);
    by = By.xpath("//p[. = 'Akun sudah terdaftar']");
    driver.findElement(by);

    // 12. Is 'Login' present?
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = ' Login ']");
    driver.findElement(by);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://bukalapak.com/"));
  }
}
